{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Doc_Home_Screen from \"./screens/Doc_Home_Screen\";\nimport Home from \"./screens/Home\";\nimport Page_2 from \"./screens/Page_2\";\nimport Pat_Sign from \"./screens/Pat_Sign\";\nimport Pat_Login from \"./screens/Pat_Login\";\nimport Doc_Login from \"./screens/Doc_Login\";\nimport Doc_List_Patient from \"./screens/Doc_List_Patient\";\nimport Doc_Patient_Traitment from \"./screens/Doc_Patient_Traitment\";\nimport Doc_Profile from \"./screens/Doc_Profile\";\nimport Doc_Ajout_Traitement from \"./screens/Doc_Ajout_Traitement\";\nimport Pat_Home_Screen from \"./screens/Pat_Home_Screen\";\nimport Pat_List_Doc from \"./screens/Pat_List_Doc\";\nimport Pat_Med_Profile from \"./screens/Pat_Med_Profile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Pat_Home_Screen\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Page_2\",\n        component: Page_2\n      }), _jsx(Stack.Screen, {\n        name: \"Doc_Login\",\n        component: Doc_Login\n      }), _jsx(Stack.Screen, {\n        name: \"Doc_Home_Screen\",\n        component: Doc_Home_Screen\n      }), _jsx(Stack.Screen, {\n        name: \"Doc_List_Patient\",\n        component: Doc_List_Patient\n      }), _jsx(Stack.Screen, {\n        name: \"Doc_Profile\",\n        component: Doc_Profile\n      }), _jsx(Stack.Screen, {\n        name: \"Doc_Ajout_Traitement\",\n        component: Doc_Ajout_Traitement\n      }), _jsx(Stack.Screen, {\n        name: \"Doc_Patient_Traitment\",\n        component: Doc_Patient_Traitment\n      }), _jsx(Stack.Screen, {\n        name: \"Pat_Login\",\n        component: Pat_Login\n      }), _jsx(Stack.Screen, {\n        name: \"Pat_Sign\",\n        component: Pat_Sign\n      }), _jsx(Stack.Screen, {\n        name: \"Pat_Home_Screen\",\n        component: Pat_Home_Screen\n      }), _jsx(Stack.Screen, {\n        name: \"Pat_List_Doc\",\n        component: Pat_List_Doc\n      }), _jsx(Stack.Screen, {\n        name: \"Pat_Med_Profile\",\n        component: Pat_Med_Profile\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","Doc_Home_Screen","Home","Page_2","Pat_Sign","Pat_Login","Doc_Login","Doc_List_Patient","Doc_Patient_Traitment","Doc_Profile","Doc_Ajout_Traitement","Pat_Home_Screen","Pat_List_Doc","Pat_Med_Profile","jsx","_jsx","jsxs","_jsxs","App","Stack","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component"],"sources":["C:/Users/moham/OneDrive/Documents/PFE/TABIBI-PFE/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport Doc_Home_Screen from \"./screens/Doc_Home_Screen\";\r\nimport Home from \"./screens/Home\";\r\nimport Page_2 from \"./screens/Page_2\";\r\nimport Pat_Sign from \"./screens/Pat_Sign\";\r\nimport Pat_Login from \"./screens/Pat_Login\";\r\nimport Doc_Login from \"./screens/Doc_Login\";\r\nimport Doc_List_Patient from \"./screens/Doc_List_Patient\";\r\nimport Doc_Patient_Traitment from \"./screens/Doc_Patient_Traitment\";\r\nimport Doc_Profile from \"./screens/Doc_Profile\";\r\nimport Doc_Ajout_Traitement from \"./screens/Doc_Ajout_Traitement\";\r\nimport Pat_Home_Screen from \"./screens/Pat_Home_Screen\";\r\nimport Pat_List_Doc from \"./screens/Pat_List_Doc\";\r\nimport Pat_Med_Profile from \"./screens/Pat_Med_Profile\";\r\nexport default function App() {\r\n  const Stack = createNativeStackNavigator();\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        initialRouteName=\"Pat_Home_Screen\"\r\n        screenOptions={{ headerShown: false }}\r\n      >\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n        <Stack.Screen name=\"Page_2\" component={Page_2} />\r\n        <Stack.Screen name=\"Doc_Login\" component={Doc_Login} />\r\n        <Stack.Screen name=\"Doc_Home_Screen\" component={Doc_Home_Screen} />\r\n        <Stack.Screen name=\"Doc_List_Patient\" component={Doc_List_Patient} />\r\n        <Stack.Screen name=\"Doc_Profile\" component={Doc_Profile} />\r\n        <Stack.Screen\r\n          name=\"Doc_Ajout_Traitement\"\r\n          component={Doc_Ajout_Traitement}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Doc_Patient_Traitment\"\r\n          component={Doc_Patient_Traitment}\r\n        />\r\n        <Stack.Screen name=\"Pat_Login\" component={Pat_Login} />\r\n        <Stack.Screen name=\"Pat_Sign\" component={Pat_Sign} />\r\n        <Stack.Screen name=\"Pat_Home_Screen\" component={Pat_Home_Screen} />\r\n        <Stack.Screen name=\"Pat_List_Doc\" component={Pat_List_Doc} />\r\n        <Stack.Screen name=\"Pat_Med_Profile\" component={Pat_Med_Profile} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/* <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === 'Home') {\r\n              iconName = focused\r\n                ? 'ios-information-circle'\r\n                : 'ios-information-circle-outline';\r\n            } else if (route.name === 'Settings') {\r\n              iconName = focused ? 'ios-list-box' : 'ios-list';\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: 'tomato',\r\n          tabBarInactiveTintColor: 'gray',\r\n        })}\r\n      ></Tab.Navigator> */\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,eAAe;AACtB,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,QAAQ;AACf,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,gBAAgB;AACvB,OAAOC,qBAAqB;AAC5B,OAAOC,WAAW;AAClB,OAAOC,oBAAoB;AAC3B,OAAOC,eAAe;AACtB,OAAOC,YAAY;AACnB,OAAOC,eAAe;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACxD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,KAAK,GAAGnB,0BAA0B,EAAE;EAC1C,OACEe,IAAA,CAAChB,mBAAmB;IAAAqB,QAAA,EAClBH,KAAA,CAACE,KAAK,CAACE,SAAS;MACdC,gBAAgB,EAAC,iBAAiB;MAClCC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAJ,QAAA,GAEtCL,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEzB;MAAK,EAAG,EAC7Ca,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAExB;MAAO,EAAG,EACjDY,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAErB;MAAU,EAAG,EACvDS,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,iBAAiB;QAACC,SAAS,EAAE1B;MAAgB,EAAG,EACnEc,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,kBAAkB;QAACC,SAAS,EAAEpB;MAAiB,EAAG,EACrEQ,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,aAAa;QAACC,SAAS,EAAElB;MAAY,EAAG,EAC3DM,IAAA,CAACI,KAAK,CAACM,MAAM;QACXC,IAAI,EAAC,sBAAsB;QAC3BC,SAAS,EAAEjB;MAAqB,EAChC,EACFK,IAAA,CAACI,KAAK,CAACM,MAAM;QACXC,IAAI,EAAC,uBAAuB;QAC5BC,SAAS,EAAEnB;MAAsB,EACjC,EACFO,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEtB;MAAU,EAAG,EACvDU,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEvB;MAAS,EAAG,EACrDW,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,iBAAiB;QAACC,SAAS,EAAEhB;MAAgB,EAAG,EACnEI,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEf;MAAa,EAAG,EAC7DG,IAAA,CAACI,KAAK,CAACM,MAAM;QAACC,IAAI,EAAC,iBAAiB;QAACC,SAAS,EAAEd;MAAgB,EAAG;IAAA;EACnD,EACE;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}